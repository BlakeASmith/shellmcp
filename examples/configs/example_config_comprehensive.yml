# Comprehensive example YAML configuration for shellmcp
# Demonstrates all resource and prompt types: cmd, file, text, and template
server:
  name: comprehensive-mcp-server
  desc: Comprehensive MCP Server demonstrating all resource and prompt types
  version: "1.0.0"
  env:
    NODE_ENV: production
    DEBUG: "false"

# Reusable argument definitions
args:
  FilePath:
    help: Path to a file
    type: string
    pattern: "^[^\\0]+$"
  
  DirectoryPath:
    help: Path to a directory
    type: string
    pattern: "^[^\\0]+$"
  
  BooleanFlag:
    help: Boolean flag
    type: boolean
    default: false

# Tool definitions
tools:
  ListFiles:
    cmd: ls -la {{ path }}
    desc: List files in a directory with detailed information
    help-cmd: ls --help
    args:
      - name: path
        help: Directory path to list
        default: "."
        ref: DirectoryPath

  ReadFile:
    cmd: cat {{ file }}
    desc: Read and display the contents of a file
    help-cmd: cat --help
    args:
      - name: file
        help: File to read
        ref: FilePath

# Resource definitions - demonstrating all three types
resources:
  # Command-based resource
  SystemInfo:
    uri: "system://info"
    name: "System Information"
    description: "Current system information from commands"
    mime_type: "text/plain"
    cmd: "uname -a && df -h"
    
  # File-based resource
  ConfigFile:
    uri: "file://config/{{ config_name }}"
    name: "Configuration File"
    description: "Read configuration file from filesystem"
    mime_type: "text/plain"
    file: "{{ config_path }}"
    args:
      - name: config_path
        help: "Path to configuration file"
        ref: FilePath
      - name: config_name
        help: "Configuration name"
        default: "default"
  
  # Text-based resource (static)
  StaticText:
    uri: "text://static"
    name: "Static Text Resource"
    description: "Direct static text content"
    mime_type: "text/plain"
    text: "This is a static text resource that doesn't change."
  
  # Text-based resource (dynamic with templates)
  DynamicText:
    uri: "text://{{ resource_name }}"
    name: "Dynamic Text Resource"
    description: "Dynamic text content with variables"
    mime_type: "text/plain"
    text: |
      Hello {{ user_name }}!
      
      This is a dynamic text resource for {{ resource_name }}.
      
      {% if include_timestamp %}
      Generated at: {{ now().strftime('%Y-%m-%d %H:%M:%S') }}
      {% endif %}
      
      {% if include_system_info %}
      System: {{ now().strftime('%Y-%m-%d') }}
      {% endif %}
    args:
      - name: user_name
        help: "User name"
        type: string
        default: "User"
      - name: resource_name
        help: "Resource name"
        type: string
        default: "default"
      - name: include_timestamp
        help: "Include timestamp"
        type: boolean
        default: false
      - name: include_system_info
        help: "Include system info"
        type: boolean
        default: false

# Prompt definitions - demonstrating all three types
prompts:
  # Command-based prompt
  CodeReview:
    name: "Code Review Prompt"
    description: "Generate a code review prompt via command"
    cmd: |
      echo "You are a senior software engineer reviewing the following {{ language }} code:"
      echo ""
      echo "```{{ language }}"
      echo "{{ code }}"
      echo "```"
      echo ""
      echo "Please provide a thorough code review focusing on:"
      echo "- Code quality and best practices"
      echo "- Performance implications"
      echo "- Security considerations"
      echo "- Maintainability"
      echo ""
      {% if focus_areas %}
      echo "Pay special attention to: {{ focus_areas }}"
      {% endif %}
    args:
      - name: language
        help: "Programming language"
        choices: ["python", "javascript", "java", "go"]
        default: "python"
      - name: code
        help: "Code to review"
        type: string
      - name: focus_areas
        help: "Specific areas to focus on"
        type: string
        default: ""
  
  # File-based prompt
  CodeReviewTemplate:
    name: "Code Review Template"
    description: "Load code review prompt from template file"
    file: "prompts/code_review_{{ language }}.txt"
    args:
      - name: language
        help: "Programming language"
        choices: ["python", "javascript", "java", "go"]
        default: "python"
  
  # Direct template prompt (simple)
  SimpleTemplate:
    name: "Simple Template Prompt"
    description: "Direct Jinja2 template prompt"
    template: |
      You are a helpful assistant. Please help with the following request:
      
      {{ user_request }}
      
      {% if context %}
      Additional context: {{ context }}
      {% endif %}
      
      {% if tone %}
      Please respond in a {{ tone }} tone.
      {% endif %}
    args:
      - name: user_request
        help: "User's request"
        type: string
      - name: context
        help: "Additional context"
        type: string
        default: ""
      - name: tone
        help: "Response tone"
        choices: ["professional", "casual", "friendly", "formal"]
        default: "professional"
  
  # Direct template prompt (advanced)
  AdvancedTemplate:
    name: "Advanced Template Prompt"
    description: "Complex template with conditional logic"
    template: |
      You are a {{ role }} expert.
      
      {% if task_type == "analysis" %}
      Please analyze the following {{ subject }}:
      {% elif task_type == "generation" %}
      Please generate {{ subject }} with the following requirements:
      {% else %}
      Please help with {{ subject }}:
      {% endif %}
      
      {{ content }}
      
      {% if requirements %}
      Requirements:
      {% for req in requirements %}
      - {{ req }}
      {% endfor %}
      {% endif %}
      
      {% if output_format %}
      Please provide the output in {{ output_format }} format.
      {% endif %}
      
      {% if include_examples %}
      Please include examples where appropriate.
      {% endif %}
    args:
      - name: role
        help: "Expert role"
        choices: ["technical", "creative", "analytical", "business"]
        default: "technical"
      - name: task_type
        help: "Type of task"
        choices: ["analysis", "generation", "help"]
        default: "help"
      - name: subject
        help: "Subject matter"
        type: string
      - name: content
        help: "Main content"
        type: string
      - name: requirements
        help: "List of requirements"
        type: array
        default: []
      - name: output_format
        help: "Desired output format"
        type: string
        default: ""
      - name: include_examples
        help: "Include examples"
        type: boolean
        default: false